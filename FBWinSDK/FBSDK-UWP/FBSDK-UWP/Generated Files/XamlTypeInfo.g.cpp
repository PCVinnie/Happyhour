//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "pch.h"
#include "XamlTypeInfo.g.h"

#include "FacebookDialog.xaml.h"
#include "FacebookProfilePictureControl.xaml.h"
#include "XamlBindingInfo.g.hpp"
#include "FacebookDialog.g.hpp"
#include "FacebookProfilePictureControl.g.hpp"


::Windows::UI::Xaml::Markup::IXamlType^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlType(::Platform::String^ typeName)
{
    if (typeName == L"Windows.UI.Xaml.Controls.Button")
    {
        return ref new XamlSystemBaseType(typeName);
    }
    if (typeName == L"Windows.UI.Xaml.Controls.ContentControl")
    {
        return ref new XamlSystemBaseType(typeName);
    }
    if (typeName == L"Object")
    {
        return ref new XamlSystemBaseType(typeName);
    }
    if (typeName == L"Windows.UI.Xaml.Controls.UserControl")
    {
        return ref new XamlSystemBaseType(typeName);
    }
    if (typeName == L"String")
    {
        return ref new XamlSystemBaseType(typeName);
    }
    if (typeName == L"Facebook.FBLoginButton")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.FBLoginButton", this->GetXamlTypeByName(L"Windows.UI.Xaml.Controls.Button"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->Activator =
            []() -> ::Platform::Object^ 
            {
                return ref new ::Facebook::FBLoginButton(); 
            };
        userType->AddMemberName(L"Permissions");
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.FBPermissions")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.FBPermissions", this->GetXamlTypeByName(L"Object"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->SetIsReturnTypeStub();
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.ScaleConverter")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.ScaleConverter", this->GetXamlTypeByName(L"Object"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->Activator =
            []() -> ::Platform::Object^ 
            {
                return ref new ::Facebook::ScaleConverter(); 
            };
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.ColorLuminosityConverter")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.ColorLuminosityConverter", this->GetXamlTypeByName(L"Object"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->Activator =
            []() -> ::Platform::Object^ 
            {
                return ref new ::Facebook::ColorLuminosityConverter(); 
            };
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.FacebookDialog")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.FacebookDialog", this->GetXamlTypeByName(L"Windows.UI.Xaml.Controls.UserControl"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->Activator =
            []() -> ::Platform::Object^ 
            {
                return ref new ::Facebook::FacebookDialog(); 
            };
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.ProfilePictureControl")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.ProfilePictureControl", this->GetXamlTypeByName(L"Windows.UI.Xaml.Controls.UserControl"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->Activator =
            []() -> ::Platform::Object^ 
            {
                return ref new ::Facebook::ProfilePictureControl(); 
            };
        userType->AddMemberName(L"CropMode");
        userType->AddMemberName(L"UserId");
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"Facebook.CroppingType")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"Facebook.CroppingType", this->GetXamlTypeByName(L"System.Enum"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        userType->FromStringConverter =
            [](::XamlTypeInfo::InfoProvider::XamlUserType^ userType, ::Platform::String^ input) -> ::Platform::Object^
            {
                uint32 enumValue = userType->CreateEnumUIntFromString(input);
                return ref new ::Platform::Box<::Facebook::CroppingType>((::Facebook::CroppingType)enumValue);
            };
        userType->AddEnumValue(L"Square", ::Windows::Foundation::PropertyValue::CreateInt32((int)::Facebook::CroppingType::Square));
        userType->AddEnumValue(L"Original", ::Windows::Foundation::PropertyValue::CreateInt32((int)::Facebook::CroppingType::Original));
        userType->SetIsLocalType();
        return userType;
    }


    if (typeName == L"System.Enum")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"System.Enum", this->GetXamlTypeByName(L"System.ValueType"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        return userType;
    }


    if (typeName == L"System.ValueType")
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(this, L"System.ValueType", this->GetXamlTypeByName(L"Object"));
        userType->KindOfType = ::Windows::UI::Xaml::Interop::TypeKind::Metadata;
        return userType;
    }


    return nullptr;
    }

::Windows::UI::Xaml::Markup::IXamlMember^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlMember(::Platform::String^ longMemberName)
{
    if (longMemberName == L"Facebook.FBLoginButton.Permissions")
    {
       ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(this, L"Permissions", L"Facebook.FBPermissions");
        xamlMember->Getter =
            [](::Platform::Object^ instance) -> ::Platform::Object^
            {
                auto that = (::Facebook::FBLoginButton^)instance;
                return that->Permissions;
            };

        xamlMember->Setter =
            [](::Platform::Object^ instance, ::Platform::Object^ value) -> void
            {
                auto that = (::Facebook::FBLoginButton^)instance;
                that->Permissions = (::Facebook::FBPermissions^)value;
            };
        return xamlMember;
    }

    if (longMemberName == L"Facebook.ProfilePictureControl.CropMode")
    {
       ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(this, L"CropMode", L"Facebook.CroppingType");
        xamlMember->Getter =
            [](::Platform::Object^ instance) -> ::Platform::Object^
            {
                auto that = (::Facebook::ProfilePictureControl^)instance;
                auto value = ref new ::Platform::Box<::Facebook::CroppingType>(that->CropMode);
                return value;
            };

        xamlMember->Setter =
            [](::Platform::Object^ instance, ::Platform::Object^ value) -> void
            {
                auto that = (::Facebook::ProfilePictureControl^)instance;
                auto boxedValue = (::Platform::IBox<::Facebook::CroppingType>^)value;
                that->CropMode = (::Facebook::CroppingType)(boxedValue->Value);
            };
        return xamlMember;
    }

    if (longMemberName == L"Facebook.ProfilePictureControl.UserId")
    {
       ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(this, L"UserId", L"String");
        xamlMember->Getter =
            [](::Platform::Object^ instance) -> ::Platform::Object^
            {
                auto that = (::Facebook::ProfilePictureControl^)instance;
                return that->UserId;
            };

        xamlMember->Setter =
            [](::Platform::Object^ instance, ::Platform::Object^ value) -> void
            {
                auto that = (::Facebook::ProfilePictureControl^)instance;
                that->UserId = (::Platform::String^)value;
            };
        return xamlMember;
    }

    return nullptr;
}

